{"version":3,"sources":["actions/index.tsx","reducers/card.tsx","reducers/page.tsx","reducers/index.tsx","saga/card.tsx","saga/page.tsx","saga/watchers.tsx","saga/index.tsx","store/index.tsx","components/button/button.component.tsx","actions/card.tsx","actions/page.tsx","components/button/button.container.tsx","components/profilePicture/index.tsx","pages/about.tsx","pages/skill.tsx","pages/experience.tsx","components/card/card.component.tsx","components/card/card.container.tsx","selectors/card.tsx","selectors/page.tsx","components/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FLIP_CARD","ACTIVE_PAGE","initialState","isFlipped","active","rootReducer","combineReducers","card","state","action","response","payload","type","types","page","flipCard","request","console","log","activePage","watchCard","watchPage","takeLatest","startForman","fork","persistConfig","key","storage","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","setupStore","persistor","persistStore","runSaga","run","rootSaga","purge","ButtonStyled","styled","button","createAction","ButtonPage","connect","dispatch","bindActionCreators","className","value","useState","setFlipped","firstUpdate","useRef","useLayoutEffect","current","onClick","ProfilePicture","div","PageAbout","Page","section","Block","li","Title","span","Section","Image","img","PageSkill","src","Company","Date","PageExperience","CardStyled","mapStateToProps","createSelector","getCard","getCardState","getActivePage","CardPage","activeCard","setActivePage","renderPage","style","height","main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb111559.chunk.js","sourcesContent":["export const FLIP_CARD = \"FLIP_CARD\"\nexport const ACTIVE_PAGE = \"ACTIVE_PAGE\"","import * as types from '../actions'\n\nexport const initialState = {\n  isFlipped: false,\n}\n\nexport const cardReducer = (state = initialState, action: any) => {\n  \n  let response = action.payload;\n\n  switch (action.type) {\n    case types.FLIP_CARD:\n      return { ...state, isFlipped: response}\n    default:\n      return state\n  }\n\n}","import * as types from '../actions'\n\nexport const initialState = {\n  active: null,\n}\n\nexport const pageReducer = (state = initialState, action: any) => {\n  \n  let response = action.payload;\n\n  switch (action.type) {\n    case types.ACTIVE_PAGE:\n      return { ...state, active: response}\n    default:\n      return state\n  }\n\n}","import { combineReducers } from 'redux';\nimport { cardReducer } from './card'\nimport { pageReducer } from './page'\n\nexport const rootReducer = combineReducers({\n    card: cardReducer,\n    page: pageReducer\n})","import { getCardState } from \"../selectors/card\"\n\nexport function* flipCard(requestÂ : ReturnType<typeof getCardState>) {\n  yield console.log(\"Saga card\", request)\n}\n","import { getActivePage } from \"../selectors/page\"\n\nexport function* activePage(request: ReturnType<typeof getActivePage>) {\n  yield console.log(\"Saga page\", request)\n}\n","import * as types from '../actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport { flipCard } from './card';\nimport { activePage } from './page';\n\n\nexport function* watchCard() {\n  yield takeLatest(types.FLIP_CARD,flipCard)\n}\n\nexport function* watchPage() {\n  yield takeLatest(types.ACTIVE_PAGE,activePage)\n}","import { fork } from 'redux-saga/effects';\nimport { \n  watchCard, watchPage\n} from './watchers';\n\nexport default function* startForman() {\n  yield fork(watchCard)\n  yield fork(watchPage)\n}","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage'\nimport { rootReducer } from '../reducers';\nimport rootSaga from '../saga';\n\nconst persistConfig = {\n  key: 'portfolio',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet store = createStore(\n  persistedReducer, \n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware) \n  ) \n)\n\nconst setupStore = () => {\n  let persistor = persistStore(store)\n  \n  return {\n    ...store,\n    runSaga: sagaMiddleware.run(rootSaga),\n    persistor: persistor.purge()\n  }\n};\n\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default setupStore()\n","import { useRef, useLayoutEffect, useState } from 'react';\nimport styled from 'styled-components'\n\nconst ButtonStyled = styled.button<{className: string; onClick: ()=> void}>`\n      background: white;\n      color: palevioletred;\n      font-size: 1em;\n      margin: 1em;\n      padding: 0.25em 1em;\n      border: 2px solid palevioletred;\n      border-radius: 3px;\n      transition: 0.4s;\n      cursor: pointer;\n\n      &:hover {\n        background: palevioletred;\n        color: white;\n      }\n    `;\n\nexport const ButtonComponent = ({\n  className,\n  value,\n  page,\n  flipCard,\n  activePage\n}: {className?: string; value: string; page: string; flipCard: any; activePage: any}) => {\n\n  const [isFlipped, setFlipped] = useState<Boolean>(flipCard);\n  const toggleClass = () => {\n    setFlipped(!isFlipped); \n  };\n\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (!firstUpdate.current) {\n      activePage(page)\n      flipCard(flipCard)\n    }\n\n    firstUpdate.current = false;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[isFlipped])\n    \n\n  return (\n    <ButtonStyled className={isFlipped ? \"active \"+className : \"inactive \"+className} onClick={toggleClass}>\n      {value}\n    </ButtonStyled>\n  )\n\n}","import * as types from './index'\nimport { createAction } from '@reduxjs/toolkit'\n\nexport const flipCard = createAction(types.FLIP_CARD)","import * as types from './index'\nimport { createAction } from '@reduxjs/toolkit'\n\nexport const activePage = createAction(types.ACTIVE_PAGE)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ButtonComponent } from './button.component'\nimport { flipCard } from '../../actions/card'\nimport { activePage } from '../../actions/page'\n\nexport const mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      flipCard: flipCard,\n      activePage: activePage\n    },\n    dispatch\n  )\n\nexport const ButtonPage = connect(\n  null,\n  mapDispatchToProps\n)(ButtonComponent)\n","import styled from 'styled-components'\n\nconst ProfilePicture = styled.div`\n  background-image: url(./me.png);\n  width: 125px;\n  height: 125px;\n  background-position: 189px 212px;\n  border-radius: 50%;\n  transition: 0.8s;\n\n\n  &:hover {\n    box-shadow: 0px 0px 5px 5px #e082a182;\n  }\n\n`;\n\nexport default ProfilePicture\n","export const PageAbout = () => {\n  return (\n    <section>\n      I'm Matheus Garcia, Brazilian living in Portugal.\n      I work with web development since 2011.\n      I'm affictionated in solve problems, and make others life better.\n    </section>  \n  )\n}","import styled from 'styled-components'\n\n\n\nconst Page = styled.section`\n  text-align: left;\n\n  hr {\n    border: 0;\n    height: 0;\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  }\n`;\n\n\nconst Block = styled.li`\n  display: flex;\n  flex-direction: column; \n  align-items: center;\n  margin: 0 30px;\n\n  div {\n    margin: 0 10px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.span<{className?: string;}>`\n  width:100%;\n  font-weight: 700;\n  display: block;\n  margin: 20px 0px;\n  text-align: center;\n`;\n\nconst Section = styled.section<{className?: string;}>`\n  margin: 20px 0;\n\n  div {\n    width: 100%;\n    display: inline-flex;\n    justify-content: center;\n  }\n`;\n\nconst Image = styled.img<{src: string;}>`\n  width:45px;\n  height:45px;\n`;\n\nexport const PageSkill = () => {\n  return (\n    <Page>\n      <ul>\n        <Section>\n          <Title>BackEnd</Title>\n          <div>\n            <Block>\n              <Image src=\"./php.png\" /> PHP\n            </Block>\n            <Block>\n              <Image src=\"./kotlin.jpeg\" /> Kotlin\n            </Block>\n            <Block>\n              <Image src=\"./ruby.png\" /> Ruby\n            </Block>\n            <Block>\n              <Image src=\"./node.png\" /> \n              <span>Node</span>\n            </Block>\n          </div>\n        </Section>\n        <hr/>\n        <Section>\n          <Title>FrontEnd</Title>\n          <div>\n            <Block>\n              <Image src=\"./js.png\" /> Javascript\n            </Block>\n            <Block>\n              <Image src=\"./react.png\" /> React\n            </Block>\n            <Block>\n              <Image src=\"./sass.png\" /> Sass\n            </Block>\n          </div>\n        </Section>\n        <hr/>\n        <Section>\n          <Title>Storage</Title>\n          <div>\n            <Block>\n              <Image src=\"./mysql.png\" /> MySQL\n            </Block>\n            <Block>\n              <Image src=\"./postgres.png\" /> PostgreSQL\n            </Block>\n            <Block>\n              <Image src=\"./mongo.png\" /> MongoDB\n            </Block>\n            <Block>\n              <Image src=\"./rabbitmq.png\" /> RabbitMQ\n            </Block>\n            <Block>\n              <Image src=\"./kafka.png\" /> Kafka\n            </Block>\n          </div>\n        </Section>\n        <hr/>\n        <Section>\n          <Title>Other</Title>\n          <div>\n            <Block>\n              <Image src=\"./github.png\" /> GitHub\n            </Block>\n            <Block>\n              <Image src=\"./aws.png\" /> AWS\n            </Block>\n          </div>\n        </Section>\n      </ul>\n    </Page>  \n  )\n}","import styled from 'styled-components'\n\n\nconst Title = styled.span<{className: string;}>`\n  display: block;\n`;\n\n\nconst Company = styled.span<{className: string;}>`\n  display: block;\n  font-size: 10px;\n`;\n\n\nconst Date = styled.span<{className: string;}>`\n  display: block;\n  font-size: 9px;\n  color: #919191;\n`;\n\nconst Block = styled.li`\n  display: flex;\n\n  div {\n    margin: 0 10px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Image = styled.img<{src: string;}>`\n  width:45px;\n`;\n\n\nconst Page = styled.section`\n  text-align: left;\n\n  hr {\n    border: 0;\n    height: 0;\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  }\n`;\n\n\nexport const PageExperience = () => {\n  return (\n    <Page>\n      <ul>\n        <Block>\n          <div>\n            <Image src=\"./td.jpeg\" />\n          </div>\n          <div>\n            <Title className=\"title\">Tech Lead / Senior Software Engineer</Title>\n            <Company className=\"company\">Talkdesk</Company>\n            <Date className=\"workPeriod\">Feb 2020 ~ Nov 2021</Date>\n          </div>\n        </Block>\n        <hr />\n        <Block>\n          <div>\n            <Image src=\"./pk.jpeg\" />\n          </div>\n          <div>\n            <Title className=\"title\">Team Lead / Backend Developer</Title>\n            <Company className=\"company\">Playkids</Company>\n            <Date className=\"workPeriod\">Apr 2015 ~ Dec 2020</Date>\n          </div>\n        </Block>\n        <hr />\n        <Block>\n          <div>\n            <Image src=\"./spider.jpeg\" />\n          </div>\n          <div>\n            <Title className=\"title\">Fullstack Developer</Title>\n            <Company className=\"company\">Spider.ad</Company>\n            <Date className=\"workPeriod\">May 2012 ~ Feb 2015</Date>\n          </div>\n        </Block>\n        <hr />\n        <Block>\n          <div>\n            <Image src=\"./monqi.jpeg\" />\n          </div>\n          <div>\n            <Title className=\"title\">Fullstack Developer</Title>\n            <Company className=\"company\">MonQi</Company>\n            <Date className=\"workPeriod\">Sep 2011 ~ Dec 2012</Date>\n          </div>\n        </Block>\n      </ul>\n    </Page>  \n  )\n}","import styled from 'styled-components'\nimport { ButtonPage as Button } from '../button'\nimport ProfilePicture from '../profilePicture'\nimport {Â PageAboutÂ } from '../../pages/about'\nimport {Â PageSkillÂ } from '../../pages/skill'\nimport { PageExperience } from '../../pages/experience'\nimport { useLayoutEffect, useRef, useState } from 'react'\n\nconst CardStyled = styled.section<{className: string;}>`\n  width: 35em;\n  margin: 0 auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .back {\n    button {\n      width: 20px;\n      text-align: center;\n      padding: 0;\n      border: 0;\n      position: absolute;\n      top: 0;\n      left: 1em;\n    }\n  }\n`;\n\n\nexport const CardComponent = ( { getCardState, getActivePage, flipCard } : {  getCardState: any, getActivePage: any, flipCard: any } )=> {\n\n  let activeCard = '';\n  if (getCardState) {\n    activeCard += ' active';\n  }\n\n  const sizing = {\n    height: '120px'\n  };\n\n  \n  const [activePage, setActivePage] = useState<any>(null);\n\n\n  function renderPage(activePage: string){\n    switch(activePage) {\n      case \"skill\":\n        return <PageSkill />\n      case \"experience\":\n        return <PageExperience />\n      case \"about\":\n        return <PageAbout />\n    }\n  }\n\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (!firstUpdate.current) {\n\n      if(getActivePage == \"null\")Â {\n\n        flipCard(false)\n\n      } else { \n\n        setActivePage(renderPage(getActivePage))\n      }\n\n    }\n\n    firstUpdate.current = false;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[getActivePage])\n    \n\n  return (\n    <CardStyled className={\"card\" + activeCard} style={sizing}>\n      <div className=\"front\">\n          <div className=\"wrapper\">\n            <div className=\"wrapper-item\">\n              <ProfilePicture />\n            </div>\n            <div className=\"wrapper-item\">\n              My name is Matheus Garcia.<br/>\n              I'm a <b>Senior Software Engineer</b> and a <b>game lover</b>.\n              <br /><br />\n              <Button className=\"flip\" value=\"Work Experience\" page=\"experience\"/>\n              <Button className=\"flip\" value=\"Skills\" page=\"skill\" />\n              <Button className=\"flip\" value=\"About\" page=\"about\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"back\">\n          {activePage}\n\n          <Button className=\"flip\" value=\"<\" page=\"null\"/>\n        </div>\n    </CardStyled>\n  )\n\n}","import { createSelector } from 'reselect'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { CardComponent } from './card.component'\nimport { flipCard } from '../../actions/card'\nimport { getCardState } from '../../selectors/card'\nimport { getActivePage } from '../../selectors/page'\n\n\nexport const mapDispatchToProps = (dispatch: any) => bindActionCreators({\n  flipCard: flipCard,\n}, dispatch)\n\nexport const mapStateToProps = createSelector(\n  getCardState,\n  getActivePage,\n  (getCardState, getActivePage) => ({\n    getCardState,\n    getActivePage\n  })\n)\n\nexport const CardPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardComponent)\n","import type { RootState } from '../store'\n\nexport const getCard = (state: RootState) => state.card\n\nexport const getCardState = (state: RootState) => getCard(state).isFlipped\n","import type { RootState } from '../store'\n\nexport const getActivePage = (state: RootState) => state.page.active\n","import styled from 'styled-components'\n\nconst main = styled.main`\n  background-image: url(./pattern.png);\n  width: 100%;\n`;\n\nexport default main","\nimport { select } from 'redux-saga/effects'\nimport './App.css'\nimport { CardPage as Card } from './components/card';\nimport { ButtonPage as Button } from './components/button';\nimport ProfilePicture from './components/profilePicture';\nimport Main from './components/main'\nimport {Â getCardStateÂ } from './selectors/card'\n\nfunction App() {\n\n  return (\n    <Main className=\"main\">\n      <Card></Card>\n    </Main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}